<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.compassion</groupId>
		<artifactId>maven-parent</artifactId>
		<version>1.0.0</version>
	</parent>
	
	<repositories>
		<repository>
			<id>gitlab-maven</id>
			<name>GitLab Maven Packages - Data Works group</name>
			<url>https://gitlab.com/api/v4/groups/11537535/-/packages/maven</url>
		</repository>
	</repositories>

	<artifactId>commons-jvm</artifactId>
	<name>Compassion JVM Commons</name>
	<version>2.6.10</version>
	<inceptionYear>2023</inceptionYear>

	<properties>
		<git.projectId>50439669</git.projectId>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jool</artifactId>
			<version>0.9.15</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>32.1.2-jre</version>
			<exclusions>
				<!-- See https://groups.google.com/forum/#!topic/guava-discuss/AKBGPca9unw -->
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>listenablefuture</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Don't ship a log implementation since often this is used with Logback, JUL, etc.
		     Change implementation scope to test for running tests and ship API only. -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
			<scope>test</scope>
		</dependency>
		<!--For setting env variables-->
		<dependency>
			<groupId>org.junit-pioneer</groupId>
			<artifactId>junit-pioneer</artifactId>
			<version>2.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
		   	<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>
					<!-- Environment variable test -->
					<argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine>
					<!-- See https://javachannel.org/posts/help-my-java-locale-is-wrong-in-jdk11/ -->
					<systemPropertyVariables>
						<java.locale.providers>COMPAT,CLDR,SPI</java.locale.providers>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<dependencies>
					<!-- Sync Lombok version with the one we actually use to fix Java 17 error -->
					<dependency>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>1.18.28</version>
					</dependency>
				</dependencies>
			</plugin>
    	</plugins>
	</build>
</project>